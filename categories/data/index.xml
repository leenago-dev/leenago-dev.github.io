<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data on Leena's Dev Blog</title><link>https://leenago-dev.github.io/categories/data/</link><description>Recent content in Data on Leena's Dev Blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><copyright>Leena</copyright><lastBuildDate>Mon, 12 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://leenago-dev.github.io/categories/data/index.xml" rel="self" type="application/rss+xml"/><item><title>ddd</title><link>https://leenago-dev.github.io/p/ddd/</link><pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate><guid>https://leenago-dev.github.io/p/ddd/</guid><description>&lt;img src="https://images.unsplash.com/photo-1667372531881-6f975b1c86db?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3w2MzcxNDh8MHwxfHJhbmRvbXx8fHx8fHx8fDE3MjM0MjYzMTB8&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=1080?fm=webp" alt="Featured image of post ddd" />&lt;h2 id="개요">&lt;a href="#%ea%b0%9c%ec%9a%94" class="header-anchor">&lt;/a>개요
&lt;/h2>&lt;ul>
&lt;li>예전에는 이렇게 &lt;code>참고문서&lt;/code>가 있어서, 이 문서를 참고하여 API를 가지고 왔습니다.&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img src="공공데이터포털_0.png" alt="공공데이터포털 과거ver" width="700" height="500" class="my-image">
&lt;figcaption>&lt;cite>hwp 문서라니...^^..&lt;/cite>&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>어느 시점부터 Swagger-UI 기반의 OpenAPI 제공이 되기 시작했습니다.&lt;br> 새로운 방식으로 API 호출하는 방법을 먼저 알아봅시다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;h2 id="swagger-ui-기반-openapi-사용하기">&lt;a href="#swagger-ui-%ea%b8%b0%eb%b0%98-openapi-%ec%82%ac%ec%9a%a9%ed%95%98%ea%b8%b0" class="header-anchor">&lt;/a>Swagger-UI 기반 OpenAPI 사용하기
&lt;/h2>&lt;h3 id="step-1-필요한-데이터-활용신청하기">&lt;a href="#step-1-%ed%95%84%ec%9a%94%ed%95%9c-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%99%9c%ec%9a%a9%ec%8b%a0%ec%b2%ad%ed%95%98%ea%b8%b0" class="header-anchor">&lt;/a>Step 1: 필요한 데이터 활용신청하기
&lt;/h3>&lt;ul>
&lt;li>필요한 데이터를 검색하고, 해당 데이터를 클릭합니다.&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img src="공공데이터포털.png" alt="공공데이터포털" width="400" height="500" class="my-image">
&lt;figcaption>&lt;cite>사용데이터&lt;/cite>&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>클릭하면 &lt;code>데이터 상세&lt;/code>가 뜨는데, 아래 &lt;kbd>활용신청&lt;/kbd> 버튼을 클릭합니다.&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img src="공공데이터포털_1_2.png" alt="공공데이터포털" width="700" height="500" class="my-image">
&lt;figcaption>&lt;cite>활용신청&lt;/cite>&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>사유를 기재하는 칸이 나오게 되는데, 간단하게 사유를 기재해주면 됩니다. (자동승인이 됩니다.)&lt;/li>
&lt;/ul>
&lt;/p>
&lt;h3 id="step-2-인증키-확인하기">&lt;a href="#step-2-%ec%9d%b8%ec%a6%9d%ed%82%a4-%ed%99%95%ec%9d%b8%ed%95%98%ea%b8%b0" class="header-anchor">&lt;/a>Step 2: 인증키 확인하기
&lt;/h3>&lt;ul>
&lt;li>&lt;kbd>마이페이지 ▶ 데이터 활용 ▶ Open API ▶ 활용신청 현황&lt;/kbd>에서 활용신청한 데이터 목록을 확인할 수 있습니다.&lt;/li>
&lt;li>확인하고자 하는&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img src="공공데이터포털_3.png" alt="공공데이터포털 인증키" width="600" height="500" class="my-image">
&lt;figcaption>&lt;cite>인증키 목록&lt;/cite>&lt;/figcaption>
&lt;/figure>
&lt;h2 id="필요한-라이브러리-호출">&lt;a href="#%ed%95%84%ec%9a%94%ed%95%9c-%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%ed%98%b8%ec%b6%9c" class="header-anchor">&lt;/a>필요한 라이브러리 호출
&lt;/h2>&lt;head>
&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/tomorrow-night-bright.min.css">
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js">&lt;/script>
&lt;/head>
&lt;pre>&lt;code class="python">
import pandas as pd
import requests
import gspread
from gspread_dataframe import set_with_dataframe
from google.colab import auth
auth.authenticate_user()
creds, _ = default()
gc = gspread.authorize(creds)
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;pre>&lt;code class="python">
sheet = gc.open('Airport &amp; Airline codes')
airline_sheet = sheet.worksheet('Airline')
airport_sheet = sheet.worksheet('Airport')
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script></description></item><item><title>Unsplash API 연결</title><link>https://leenago-dev.github.io/p/unsplash-api-%EC%97%B0%EA%B2%B0/</link><pubDate>Tue, 30 Jul 2024 00:00:00 +0000</pubDate><guid>https://leenago-dev.github.io/p/unsplash-api-%EC%97%B0%EA%B2%B0/</guid><description>&lt;img src="https://images.unsplash.com/photo-1637448025640-f609b8d2d3f1?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3w2MzcxNDh8MHwxfHJhbmRvbXx8fHx8fHx8fDE3MjIzMjQxMTN8&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=1080&amp;fm=webp" alt="Featured image of post Unsplash API 연결" />&lt;h2 id="part-1-api-key-발급받기">&lt;a href="#part-1-api-key-%eb%b0%9c%ea%b8%89%eb%b0%9b%ea%b8%b0" class="header-anchor">&lt;/a>Part 1: API Key 발급받기
&lt;/h2>&lt;p>
&lt;h3 id="step-1-회원가입">&lt;a href="#step-1-%ed%9a%8c%ec%9b%90%ea%b0%80%ec%9e%85" class="header-anchor">&lt;/a>Step 1: 회원가입
&lt;/h3>&lt;p>Access Key 발급을 받기 위해선, 먼저 &lt;a class="link" href="https://unsplash.com/developers" target="_blank" rel="noopener"
>Unsplash Developer Page&lt;/a>로 이동합니다. &lt;br> 화면 맨 우측 상단에 있는 &lt;kbd>Register as a developer&lt;/kbd>를 눌러, 회원가입을 해줍니다.&lt;/p>
&lt;img src="step1.png" alt="Step 1: Register Unsplash API account as a developer " width="550" height="550" class="my-image">
&lt;/p>
&lt;p>
&lt;h3 id="step-2-app-build-신청서-작성하기">&lt;a href="#step-2-app-build-%ec%8b%a0%ec%b2%ad%ec%84%9c-%ec%9e%91%ec%84%b1%ed%95%98%ea%b8%b0" class="header-anchor">&lt;/a>Step 2: App Build 신청서 작성하기
&lt;/h3>&lt;ol>
&lt;li>회원가입 후, 노랑색으로 표시된 &lt;kbd>Your apps&lt;/kbd>를 클릭합니다.&lt;/li>
&lt;/ol>
&lt;img src="step2.png" alt="Step 2: Go to 'Your apps'" width="550" height="550" class="my-image">
&lt;ol start="2">
&lt;li>그럼 아래 화면처럼 뜰텐데요, &lt;kbd>New Application&lt;/kbd>을 눌러줍니다.&lt;/li>
&lt;/ol>
&lt;img src="step3.png" alt="Step 3: Build App project " width="550" height="550" class="my-image">
&lt;ol start="3">
&lt;li>&lt;code>API Use and Guidelines&lt;/code>에 모두 체크를 한 뒤, &lt;kbd>Accept terms&lt;/kbd>를 클릭합니다.&lt;/li>
&lt;/ol>
&lt;img src="step4.png" alt="Step 3: Build App project " width="550" height="550" class="my-image">
&lt;ol start="4">
&lt;li>&lt;code>Application Information&lt;/code> 팝업이 뜨면, 두 칸 모두 작성해줍니다. &lt;br> 참고로, 저는 &lt;em>Personal blog&lt;/em> 라고 입력했습니다!&lt;/li>
&lt;/ol>
&lt;img src="step4-1.png" alt="Step 3: Build App project " width="550" height="550" class="my-image">
&lt;/p>
&lt;p>
&lt;h3 id="step-3-api-access-key-발급-완료">&lt;a href="#step-3-api-access-key-%eb%b0%9c%ea%b8%89-%ec%99%84%eb%a3%8c" class="header-anchor">&lt;/a>Step 3: API Access Key 발급 완료
&lt;/h3>&lt;p>그럼, 이렇게 Personal Access Key 발급이 됩니다. &lt;br> 코드에서는 &lt;code>Access Key&lt;/code>를 사용하면 됩니다.&lt;/p>
&lt;img src="step5.png" alt="Step 3: Build App project " width="550" height="550" class="my-image">
&lt;p>Access Key를 &lt;mark>&lt;strong>외부에 공개하면 안된단 것&lt;/strong>&lt;/mark>, 잊지 마세요❗&lt;/p>
&lt;/p>
&lt;hr>
&lt;p>
&lt;h2 id="part-2-코드-작성하기">&lt;a href="#part-2-%ec%bd%94%eb%93%9c-%ec%9e%91%ec%84%b1%ed%95%98%ea%b8%b0" class="header-anchor">&lt;/a>Part 2. 코드 작성하기
&lt;/h2>&lt;p>이제 본격적으로, 이미지 호출 API 코드를 작성해봅시다. &lt;br> API에서 제공하는 기능들 중, 우리는 &lt;a class="link" href="https://unsplash.com/documentation#get-a-random-photo" target="_blank" rel="noopener"
>Get a random photo&lt;/a>를 사용하여 코드를 짜볼거예요!&lt;/p>
&lt;img src="step6.png" alt="Step 3: Build App project " width="550" height="550">
&lt;/p>
&lt;p>
&lt;h3 id="step-1-필요-라이브러리-불러오기">&lt;a href="#step-1-%ed%95%84%ec%9a%94-%eb%9d%bc%ec%9d%b4%eb%b8%8c%eb%9f%ac%eb%a6%ac-%eb%b6%88%eb%9f%ac%ec%98%a4%ea%b8%b0" class="header-anchor">&lt;/a>Step 1: 필요 라이브러리 불러오기
&lt;/h3>&lt;head>
&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/tomorrow-night-bright.min.css">
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js">&lt;/script>
&lt;/head>
&lt;pre>&lt;code class="python">
import requests
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;/p>
&lt;p>
&lt;h3 id="step-2-함수-만들기---endpoint와-access-key-추가">&lt;a href="#step-2-%ed%95%a8%ec%88%98-%eb%a7%8c%eb%93%a4%ea%b8%b0---endpoint%ec%99%80-access-key-%ec%b6%94%ea%b0%80" class="header-anchor">&lt;/a>Step 2: 함수 만들기 - endpoint와 access key 추가
&lt;/h3>&lt;pre>&lt;code class="python">
def get_image_url(search_keyword, orientation):
# Unsplash API endpoint 및 API 키 설정
api_endpoint = "https://api.unsplash.com/photos/random"
access_key = YOUR ACCESS KEY # Unsplash에서 발급받은 API 키를 입력하세요.
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;/p>
&lt;p>
&lt;h3 id="step-3-함수-만들기---params-setting">&lt;a href="#step-3-%ed%95%a8%ec%88%98-%eb%a7%8c%eb%93%a4%ea%b8%b0---params-setting" class="header-anchor">&lt;/a>Step 3: 함수 만들기 - params setting
&lt;/h3>&lt;p>이제 파라미터 setting을 해봅시다. &lt;br> &lt;a class="link" href="https://unsplash.com/documentation#get-a-random-photo" target="_blank" rel="noopener"
>Get a random photo&lt;/a>에서 사용할 수 있는 파라미터는 다음과 같습니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Param&lt;/th>
&lt;th style="text-align:center">설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">&lt;code>collections&lt;/code>&lt;/td>
&lt;td style="text-align:center">특정 collection에 있는 사진 가지고 오기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>topics&lt;/code>&lt;/td>
&lt;td style="text-align:center">특정 주제에 관련된 사진 가지고 오기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>query&lt;/code>&lt;/td>
&lt;td style="text-align:center">특정 검색어에 관련된 사진 가지고 오기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>count&lt;/code>&lt;/td>
&lt;td style="text-align:center">가지고 올 사진의 개수 &lt;em>(1~30 사이)&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>orientation&lt;/code>&lt;/td>
&lt;td style="text-align:center">사진 방향 지정 (&lt;kbd>landscape&lt;/kbd>, &lt;kbd>portrait&lt;/kbd>, &lt;kbd>squarish&lt;/kbd>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>content_filter&lt;/code>&lt;/td>
&lt;td style="text-align:center">콘텐츠 필터 수준 지정 (&lt;kbd>low&lt;/kbd>, &lt;kbd>high&lt;/kbd>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">&lt;code>username&lt;/code>&lt;/td>
&lt;td style="text-align:center">특정 사용자의 사진을 가지고 올 때&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>topics&lt;/code>와 &lt;code>query&lt;/code>의 차이가 잘 이해가 되지 않아, Gemini에게 한번 물어봤습니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">특징&lt;/th>
&lt;th style="text-align:center">Topics (주제)&lt;/th>
&lt;th style="text-align:center">Query (검색어)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">필터링 방식&lt;/td>
&lt;td style="text-align:center">미리 정의된 주제를 기반으로&lt;br>광범위하게 필터링&lt;/td>
&lt;td style="text-align:center">사용자가 입력한 키워드를 기반으로&lt;br>구체적으로 필터링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">일관성&lt;/td>
&lt;td style="text-align:center">동일한 주제를 사용하면&lt;br>일관된 스타일의 사진을 얻을 수 있음&lt;/td>
&lt;td style="text-align:center">검색어에 따라 결과가 달라질 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">유연성&lt;/td>
&lt;td style="text-align:center">여러 주제를 조합하여 세분화된 필터링 가능&lt;/td>
&lt;td style="text-align:center">원하는 사진을 찾는 데 더욱 유연하게 활용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">사용 시점&lt;/td>
&lt;td style="text-align:center">특정 주제에 맞는 사진을 찾거나,&lt;br>여러 주제를 조합하여 필터링할 때&lt;/td>
&lt;td style="text-align:center">특정 개체, 장소, 상황 등을 나타내는&lt;br>사진을 찾을 때&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>두 가지의 param을 사용해봤을 때, &lt;code>query&lt;/code>가 Specific한 자료를 사용할 수 있어 편리했습니다.&lt;br>
여기에선 &lt;code>query&lt;/code> param을 사용해보겠습니다!&lt;/p>
&lt;pre>&lt;code class="python">
# 요청 Params 설정 (선택 사항)
params = {
"query": search_keyword, # 검색 키워드 (예: nature)
"orientation": orientation, # 사진 방향 (예: landscape, portrait, squarish)
"count": 1, # 가져올 이미지 개수
"fm": "jpg" # 이미지 형식 요청
}
# API 요청 헤더 설정
headers = {
"Authorization": f"Client-ID {access_key}"
}
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;/p>
&lt;p>
&lt;h3 id="step-4-함수-만들기---api-응답-확인-및-url-추출">&lt;a href="#step-4-%ed%95%a8%ec%88%98-%eb%a7%8c%eb%93%a4%ea%b8%b0---api-%ec%9d%91%eb%8b%b5-%ed%99%95%ec%9d%b8-%eb%b0%8f-url-%ec%b6%94%ec%b6%9c" class="header-anchor">&lt;/a>Step 4: 함수 만들기 - API 응답 확인 및 URL 추출
&lt;/h3>&lt;p>Blog에 이미지를 바로 삽입하기 위해, &lt;code>webp&lt;/code> 형식으로 URL을 출력하는 코드를 작성했습니다.&lt;/p>
&lt;pre>&lt;code class="python">
# API 요청 보내기
response = requests.get(api_endpoint, headers=headers, params=params)
# 응답 확인 및 이미지 URL 추출
if response.status_code == 200:
data = response.json()
image_url = data[0]["urls"]["regular"] +"?fm=webp" # WebP 이미지 URL
return image_url
else:
return ("Error fetching image:", response.status_code)
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;h3 id="step-5-함수-사용해보기">&lt;a href="#step-5-%ed%95%a8%ec%88%98-%ec%82%ac%ec%9a%a9%ed%95%b4%eb%b3%b4%ea%b8%b0" class="header-anchor">&lt;/a>Step 5: 함수 사용해보기
&lt;/h3>&lt;p>그럼 완성된 함수를 가지고, webp URL을 출력해봅시다.&lt;br>가로 사진의 Paris 사진을 Argument로 넣어봤습니다.&lt;/p>
&lt;pre>&lt;code class="python">
get_image_url('Paris', 'landscape')
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;p>그럼 &lt;code>webp URL&lt;/code>이 출력되고, 이것을 blog img로 삽입을 해보면&amp;hellip;.&lt;/p>
&lt;!-- w와 h를 이용해서 사진 사이즈를 조절 -->
&lt;figure>
&lt;img src="https://images.unsplash.com/photo-1638290046742-b5030c6b56b4?crop=entropy&amp;cs=tinysrgb&amp;fit=max&amp;fm=jpg&amp;ixid=M3w2MzcxNDh8MHwxfHJhbmRvbXx8fHx8fHx8fDE3MjIzMjU0MDF8&amp;ixlib=rb-4.0.3&amp;q=80&amp;w=1080&amp;w=500&amp;h=300?fm=webp" alt="Paris" class="my-image">
&lt;figcaption>&lt;cite>출처: Unsplash&lt;/cite>&lt;/figcaption>
&lt;/figure>
&lt;p>짜잔! 예쁜 사진이 삽입이 되었습니다📸
&lt;br>&lt;br>Random image는 말 그대로 이미지를 랜덤하게 보여주기 때문에,&lt;br>코드를 실행할 때마다 결과값이 달라지게 됩니다. &lt;br>따라서 마음에 드는 사진이 있다면, URL을 잘 간직하는 것을 추천해요 ☺️&lt;/p>
&lt;/p>
&lt;p>
&lt;h2 id="part-3-전체-코드-확인하기">&lt;a href="#part-3-%ec%a0%84%ec%b2%b4-%ec%bd%94%eb%93%9c-%ed%99%95%ec%9d%b8%ed%95%98%ea%b8%b0" class="header-anchor">&lt;/a>Part 3. 전체 코드 확인하기
&lt;/h2>&lt;pre>&lt;code class="python">
import requests
def get_image_url(search_keyword, orientation):
# Unsplash API 엔드포인트 및 API 키 설정
api_endpoint = "https://api.unsplash.com/photos/random"
access_key = YOUR ACCESS KEY # Unsplash에서 발급받은 API 키를 입력하세요.
# 요청 매개변수 설정 (선택 사항)
params = {
"query": search_keyword, # 검색 키워드 (예: nature)
"orientation": orientation, # 사진 방향 (예: landscape, portrait, squarish)
"count": 1, # 가져올 이미지 개수
"fm": "jpg" # 이미지 형식 요청
}
# API 요청 헤더 설정
headers = {
"Authorization": f"Client-ID {access_key}"
}
# API 요청 보내기
response = requests.get(api_endpoint, headers=headers, params=params)
# 응답 확인 및 이미지 URL 추출
if response.status_code == 200:
data = response.json()
image_url = data[0]["urls"]["regular"] +"?fm=webp" # WebP 이미지 URL
return image_url
else:
return ("Error fetching image:", response.status_code)
&lt;/code>&lt;/pre>
&lt;script>hljs.highlightAll();&lt;/script>
&lt;/p>
&lt;p>&lt;a class="link" href="https://gemini.google.com/app" target="_blank" rel="noopener"
>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Google_Gemini_logo.svg/64px-Google_Gemini_logo.svg.png"
loading="lazy"
alt="Google Gemini"
>&lt;/a> 가 작성해준 코드를 토대로 작성하였습니다!&lt;/p></description></item></channel></rss>